[tools]
# Tools need to be downloaded each time because if they were downloaded within 'tasks' (which run in parallel), the PATH propagation would not work properly.
# keep-sorted start
aws = "2.24.24"
eksctl = "0.205.0"
k3d = "5.8.3"
kind = "0.27.0"
# keep-sorted end

[settings]
experimental = true
trusted_config_paths = ["/"]
task_output = "prefix"

[env]
AWS_PRIMARY_DOMAIN = "aws.mylabs.dev"
AWS_K8S_DOMAIN = "k8s.{{ env.AWS_PRIMARY_DOMAIN }}"
# keep-sorted start
# Default AWS region if not overridden
AWS_REGION = "us-east-1"
CLICOLOR_FORCE = "1"
# Directory which contains the clusters mise configurations
CLUSTERS_DIRECTORY = "{{ config_root }}/clusters"
# Directory which contains the kubeconfig files for the created clusters (will be create if not exists)
CLUSTERS_KUBECONFIG_DIRECTORY = "{{ config_root }}/clusters/.kubeconfigs"
# Directory which contains the scripts to create and delete the clusters
CLUSTERS_RUN_SCRIPT_DIRECTORY = "{{ config_root }}/scripts"
MISE_TASK_OUTPUT = "prefix"
# keep-sorted end

##############################################################################
# Primary AWS Account - CloudFormation - Route53 + GitHub Actions Access + IAM role
##############################################################################

[tasks."create:aws-primary:cf-route53-gh-action-iam-role-oidc"]
description = 'Configure Primary AWS Account - Create CloudFormation - Route53 + GitHub Actions Access + IAM role'
confirm = '''
Make sure you have the following AWS environment variables set for your "Primary AWS account":
- AWS_ACCESS_KEY_ID
- AWS_SECRET_ACCESS_KEY
- (AWS_SESSION_TOKEN - in case you are using temporary credentials)
'''
env.GIT_REPOSITORY = "{{ exec(command='git config --get remote.origin.url') }}"
env.AWS_CLOUDFORMATION_TEMPLATE_FILE = "cloudformation/route53-gh-action-iam-role-oidc.yml"
env.AWS_CLOUDFORMATION_STACK_NAME = "route53-gh-action-iam-role-oidc"
env.AWS_CLOUDFORMATION_SUBJECT_CLAIM_FILTERS = "repo:ruzickap/k8s-multicluster-gitops:*"
env.AWS_CLOUDFORMATION_MANAGED_POLICY_ARNS = "arn:aws:iam::aws:policy/AdministratorAccess"
env.AWS_CLOUDFORMATION_ROLE_NAME = "GitHubFederatedRole"
run = '''
  #!/usr/bin/env bash
  set -eux
  eval aws cloudformation deploy --capabilities CAPABILITY_NAMED_IAM --stack-name "${AWS_CLOUDFORMATION_STACK_NAME}" --parameter-overrides "PrimaryDomain=${AWS_PRIMARY_DOMAIN} K8sDomain=${AWS_K8S_DOMAIN} SubjectClaimFilters=${AWS_CLOUDFORMATION_SUBJECT_CLAIM_FILTERS} ManagedPolicyARNs=${AWS_CLOUDFORMATION_MANAGED_POLICY_ARNS} RoleName=${AWS_CLOUDFORMATION_ROLE_NAME}" --template-file "${AWS_CLOUDFORMATION_TEMPLATE_FILE}" --tags "git_repository=${GIT_REPOSITORY}//${AWS_CLOUDFORMATION_TEMPLATE_FILE}"
  IAM_ROLE_ARN=$(aws cloudformation describe-stacks --stack-name "${AWS_CLOUDFORMATION_STACK_NAME}" --query 'Stacks[0].Outputs[? OutputKey==`GitHubActionsServiceRoleArn`].OutputValue' --output text)
  echo -e "[env]\nAWS_PRIMARY_IAM_ROLE_ARN = \"${IAM_ROLE_ARN}\"" > mise.local.toml
'''

[tasks."delete:aws-primary:cf-route53-gh-action-iam-role-oidc"]
description = 'Primary AWS Account - Delete CloudFormation - Route53 + GitHub Actions Access + IAM role'
confirm = '''
Are you sure you want to delete the CloudFormation (Route53 + GitHub Actions Access + IAM role) from Primary AWS Account?

Make sure you have the following AWS environment variables set for your "Primary AWS account":
- AWS_ACCESS_KEY_ID
- AWS_SECRET_ACCESS_KEY
- AWS_SESSION_TOKEN - in case you are using temporary credentials
'''
run = '''
  #!/usr/bin/env bash
  set -eux
  aws cloudformation delete-stack --stack-name route53-gh-action-iam-role-oidc
  aws cloudformation wait stack-delete-complete --stack-name route53-gh-action-iam-role-oidc
'''

##############################################################################
# AWS Tenant Account
##############################################################################


##############################################################################
# Kind
##############################################################################

[tasks."create:kind:kind01-internal"]
description = 'Create kind01.internal K8s cluster'
# Run mise again due to missing support for environment variables in tasks: https://github.com/jdx/mise/discussions/4593
run = 'mise run --env ${MISE_TASK_NAME##*:} create:${MISE_TASK_NAME##*:}'

[tasks."delete:kind:kind01-internal"]
description = 'Delete kind01.internal K8s cluster'
run = 'mise run --env ${MISE_TASK_NAME##*:} delete:${MISE_TASK_NAME##*:}'

[tasks."create:kind:kind02-internal"]
description = 'Create kind02.internal K8s cluster'
run = 'mise run --env ${MISE_TASK_NAME##*:} create:${MISE_TASK_NAME##*:}'

[tasks."delete:kind:kind02-internal"]
description = 'Delete kind02.internal K8s cluster'
run = 'mise run --env ${MISE_TASK_NAME##*:} delete:${MISE_TASK_NAME##*:}'

[tasks."create-kind-all"]
description = 'Create kind K8s clusters'
run = 'mise run "create:kind:*"'

[tasks."delete-kind-all"]
description = 'Delete kind K8s clusters'
run = 'mise run "delete:kind:*"'

##############################################################################
# K3d
##############################################################################

[tasks."create:k3d:k3d01-internal"]
description = 'Create k3d01.internal K8s cluster'
# Run mise again due to missing support for environment variables in tasks: https://github.com/jdx/mise/discussions/4593
run = 'mise run --env ${MISE_TASK_NAME##*:} create:${MISE_TASK_NAME##*:}'

[tasks."delete:k3d:k3d01-internal"]
description = 'Delete k3d01.internal K8s cluster'
run = 'mise run --env ${MISE_TASK_NAME##*:} delete:${MISE_TASK_NAME##*:}'

[tasks."create:k3d:k3d02-internal"]
description = 'Create k3d02.internal K8s cluster'
run = 'mise run --env ${MISE_TASK_NAME##*:} create:${MISE_TASK_NAME##*:}'

[tasks."delete:k3d:k3d02-internal"]
description = 'Delete k3d02.internal K8s cluster'
run = 'mise run --env ${MISE_TASK_NAME##*:} delete:${MISE_TASK_NAME##*:}'

[tasks."create-k3d-all"]
description = 'Create k3d K8s clusters'
run = 'mise run "create:k3d:*"'

[tasks."delete-k3d-all"]
description = 'Delete k3d K8s clusters'
run = 'mise run "delete:k3d:*"'

##############################################################################
# eksctl
##############################################################################

[tasks."create:eksctl:k01-k8s-aws-mylabs-dev"]
description = 'Create k01.k8s.aws.mylabs.dev K8s cluster'
run = 'mise run --env ${MISE_TASK_NAME##*:} create:${MISE_TASK_NAME##*:}'

[tasks."delete:eksctl:k01-k8s-aws-mylabs-dev"]
description = 'Delete k01.k8s.aws.mylabs.dev K8s cluster'
run = 'mise run --env ${MISE_TASK_NAME##*:} delete:${MISE_TASK_NAME##*:}'

[tasks."create-eksctl-all"]
description = 'Create eksctl K8s clusters'
run = 'mise run "create:eksctl:*"'

[tasks."delete-eksctl-all"]
description = 'Delete eksctl K8s clusters'
run = 'mise run "delete:eksctl:*"'
